<Window x:Class="_12A_Projektmunka.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:_12A_Projektmunka"
        mc:Ignorable="d"
        Title="MainWindow" Height="1080" Width="1920" WindowState="Maximized" WindowStyle="None" FontSize="30">
    <Window.Background>
        <ImageBrush Opacity="0.5" ImageSource="/12A_Projektmunka;component/img/mainbackground.jpg"/>
    </Window.Background>
    <Window.Resources>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="10"
                  Background="Transparent"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1"
                  Opacity="0.5"
                    />
                <Border 
                  Grid.Column="0"
                  CornerRadius="10" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" 
                   Opacity="0.5"/>
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="CaretBrush" Color="White"/>
        <LinearGradientBrush x:Key="GrayToLightGrayGradient" Opacity="0.2" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Offset="0" Color="LightGray"/>
            <GradientStop Offset="0.99" Color="Transparent"/>
            <GradientStop Offset="1" Color="Transparent"/>
        </LinearGradientBrush>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" CornerRadius="10"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <!--<Setter Property="Margin" Value="3"/>-->

            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="rectangle" Background="Gray" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" CornerRadius="8"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="white"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="CaretBrush" Value="{StaticResource CaretBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        
        <!--gombok-->
        <Border Grid.Column="0" VerticalAlignment="Center" Background="{StaticResource TransparentBlack}" CornerRadius="50" Width="300">
            <Grid>
                <StackPanel>
                    <Button x:Name="showWeaponsBtn" Content="Weapons" Margin="10" Height="70" Width="200" Click="showWeaponsBtn_Click"/>
                    <Button x:Name="aboutBtn" Content="About us" Margin="10" Height="70" Width="200" Click="aboutBtn_Click"/>
                    <Button x:Name="quitBtn" Content="Quit" Margin="10" Height="70" Width="200" Click="quitBtn_Click"/>
                </StackPanel>
            </Grid>
        </Border>

        <!--lista-->
        <StackPanel x:Name="selectWeaponZone" Grid.Column="1" Visibility="Hidden">
            <Border Background="{StaticResource TransparentBlack}" CornerRadius="20,20,0,0" Width="550" Margin="0,10,0,0">
                <Border Style="{StaticResource tbxBorder}" Width="500" Margin="0,10,0,0">
                    <ComboBox x:Name="weaponTypeCbx" Width="500" ItemsSource="{Binding types}" SelectionChanged="weaponTypeCbx_SelectionChanged" SelectedIndex="0"/>
                </Border>
            </Border>
            <Border 
                Background="{StaticResource TransparentBlack}"
                CornerRadius="50"
                Padding="20">
                <Grid>
                    <StackPanel>
                        <Button x:Name="selectWeaponZoneBtn" Width="30" Height="30" Content="X" Background="Gray" Foreground="White" BorderBrush="Transparent" BorderThickness="0" FontWeight="Bold" FontSize="14" Padding="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,0,0" Click="selectWeaponZoneBtn_Click"/>
                        <ListBox x:Name="weaponLbx"
                             Height="850"
                             Width="560"
                             Margin="10"
                             ItemsSource="{Binding filteredWeapons}" SelectionChanged="weaponLbx_SelectionChanged">
                            <ListBox.Resources>
                                <Style TargetType="{x:Type ListBox}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="#505050"/>
                                            <Setter Property="BorderBrush" Value="#505050"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                                        <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="true">
                                                            <ScrollViewer Padding="{TemplateBinding Padding}">
                                                                <ItemsPresenter />
                                                            </ScrollViewer>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="{x:Type ScrollBar}">
                                    <Setter Property="Background" Value="#505050"/>
                                    <Setter Property="BorderBrush" Value="#505050"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                        <RowDefinition Height="0.00001*"/>
                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                    </Grid.RowDefinitions>
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" CornerRadius="10"/>
                                                    <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" Width="17"/>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="2"/>
                                                        </Track.Thumb>
                                                    </Track>
                                                </Grid>

                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.Resources>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" Foreground="White"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.Background>
                                <SolidColorBrush Color="Transparent"/>
                            </ListBox.Background>
                            <ListBox.BorderBrush>
                                <SolidColorBrush Color="Transparent"/>
                            </ListBox.BorderBrush>
                        </ListBox>
                    </StackPanel>
                </Grid>
            </Border>
            <Border Background="{StaticResource TransparentBlack}" CornerRadius="0,0,20,20" Width="550">
                <Border Style="{StaticResource tbxBorder}" Width="200" Height="50" Margin="0,0,0,10">
                    <Button x:Name="addBtn" Content="Add Weapon" Width="200" Height="50" Click="addBtn_Click" HorizontalAlignment="Left"/>
                </Border>
            </Border>
        </StackPanel>


        <Border x:Name="selectedWeaponZone" Grid.Column="2" Margin="20" Background="{StaticResource TransparentBlack}" CornerRadius="50" Visibility="Hidden">
            <Grid>
                <Label x:Name="selectedTypeLbl" Content="{Binding tempWeapon.WeaponType}" Foreground="White" Margin="30,0" FontSize="45" FontWeight="DemiBold"/>
                <Button x:Name="selectedWeaponZoneBtn" Width="30" Height="30" Content="X" Background="Gray" Foreground="White" BorderBrush="Transparent" BorderThickness="0" FontWeight="Bold" FontSize="14" Padding="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,20,20,0" Click="selectedWeaponZoneBtn_Click"/>
                <StackPanel Margin="40,40,40,0">
                    <Border Background="{DynamicResource GrayToLightGrayGradient}" CornerRadius="50" Margin="0,0,0,20">
                        <StackPanel>
                            <Label x:Name="selectedNameLbl" Content="{Binding tempWeapon.Name}" Margin="40,20,0,0" FontSize="40" FontWeight="DemiBold"/>
                            <Border Height="280" Width="700" MouseLeftButtonDown="Border_MouseLeftButtonDown" Margin="0,10,0,20" Cursor="Hand" Background="Transparent">
                                <Image Height="280" Source="{Binding tempWeapon.filePath}" Width="700"/>
                            </Border>
                        </StackPanel>
                    </Border>


                    <!--statok-->
                    <DockPanel>
                        <Label Content="Name:"/>
                        <Border Style="{StaticResource tbxBorder}">
                            <TextBox x:Name="selectedNameTbx" IsEnabled="False" Text="{Binding tempWeapon.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Border>
                    </DockPanel>

                    <DockPanel Margin="0,7,0,0">
                        <Label Content="Type:"/>
                        <Border Style="{StaticResource tbxBorder}" Width="300" HorizontalAlignment="Right">
                            <ComboBox x:Name="selectedWeaponTypeCbx" ItemsSource="{Binding typesSelection}" SelectedItem="{Binding tempWeapon.WeaponType, Mode=TwoWay}" IsEnabled="False"/>
                        </Border>
                    </DockPanel>

                    <DockPanel Margin="0,7,0,0">
                        <Label Content="Cost:"/>
                        <Border Style="{StaticResource tbxBorder}" Height="50" Width="100" HorizontalAlignment="Right">
                            <Grid>
                                <Label Content="$" Foreground="Green"/>
                                <TextBox x:Name="selectedcostTbx" IsEnabled="False" Text="{Binding tempWeapon.Cost, Mode=TwoWay}" Padding="18,0,0,0" Height="50" Width="100" HorizontalAlignment="Right"/>
                            </Grid>
                        </Border>
                    </DockPanel>

                    <DockPanel Margin="0,7,0,0">
                        <Label Content="Ammo:"/>
                        <Border Style="{StaticResource tbxBorder}" Height="50" Width="100" HorizontalAlignment="Right">
                            <TextBox x:Name="selectedammoTbx" IsEnabled="False" Text="{Binding tempWeapon.Ammo, Mode=TwoWay}" Height="50" Width="100" HorizontalAlignment="Right"/>
                        </Border>
                    </DockPanel>

                    <DockPanel Margin="0,7,0,0">
                        <Label Content="Damage:"/>
                        <Border Style="{StaticResource tbxBorder}" Height="50" Width="100" HorizontalAlignment="Right">
                            <TextBox x:Name="selecteddamageTbx" IsEnabled="False" Text="{Binding tempWeapon.Damage, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Height="50" Width="100" HorizontalAlignment="Right"/>
                        </Border>
                    </DockPanel>
                    <Slider x:Name="selecteddamageSldr" IsEnabled="False" Value="{Binding tempWeapon.Damage, Mode=TwoWay}" Minimum="0" Maximum="100" Width="800" HorizontalAlignment="Left" Margin="20, 5"/>


                    <Label Content="Fire rate:" Margin="0,7,0,0"/>
                    <Slider x:Name="selectedfrateSldr" Value="{Binding tempWeapon.FireRate, Mode=TwoWay}" IsEnabled="False" Minimum="0" Maximum="10" Width="800" HorizontalAlignment="Left" Margin="20, 5"/>

                    <DockPanel Margin="0,7,0,0">
                        <Label Content="Penetration:"/>
                        <Border Style="{StaticResource tbxBorder}" Height="50" Width="100" HorizontalAlignment="Right">
                            <TextBox x:Name="selectedpenTbx" Text="{Binding tempWeapon.Penetration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" Height="50" Width="100" HorizontalAlignment="Right"/>
                        </Border>
                    </DockPanel>
                    <Slider x:Name="selectedpenSldr" Value="{Binding tempWeapon.Penetration, Mode=TwoWay}" IsEnabled="False" Minimum="0" Maximum="100" Width="800" HorizontalAlignment="Left" Margin="20, 5"/>


                    <DockPanel x:Name="buttonsDp" Margin="0,30" HorizontalAlignment="Center">
                        <Border Style="{StaticResource tbxBorder}" Margin="0,0,50,0">
                            <StackPanel>
                                <Button x:Name="modifyBtn" Content="Modify" Height="50" Width="200" Click="modifyBtn_Click"/>
                                <Button x:Name="saveBtn" Content="Save" Height="50" Width="200" Visibility="Collapsed" Click="saveBtn_Click"/>
                            </StackPanel>
                        </Border>
                        <Border Style="{StaticResource tbxBorder}" Margin="50,0,0,0">
                            <StackPanel>
                                <Button x:Name="delBtn" Content="Delete" Height="50" Width="200" Click="delBtn_Click"/>
                                <Button x:Name="cancelBtn" Content="Cancel" Height="50" Width="200" Visibility="Collapsed" Click="cancelBtn_Click"/>
                            </StackPanel>
                        </Border>
                    </DockPanel>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>
